type Attestation @entity {
  id: ID!
  schema: Schema!
  replacedBy: Bytes!
  attester: Bytes!
  portal: Portal!
  attestedDate: BigInt!
  expirationDate: BigInt!
  revocationDate: BigInt!
  version: BigInt!
  revoked: Boolean!
  subject: Bytes!
  encodedSubject: Bytes!
  attestationData: Bytes!
  decodedData: [String!]
  auditInformation: AuditInformation!
}

type Module @entity {
  id: ID!
  moduleAddress: Bytes!
  name: String!
  description: String!
  auditInformation: AuditInformation!
}

type Portal @entity {
  id: ID!
  ownerAddress: Bytes!
  modules: [Bytes!]
  isRevocable: Boolean!
  name: String!
  description: String!
  ownerName: String!
  attestationCounter: Int
  auditInformation: AuditInformation!
}

type Schema @entity {
  id: ID!
  name: String!
  description: String!
  context: String!
  schema: String!
  attestationCounter: Int
  auditInformation: AuditInformation!
}

type Counter @entity {
  id: ID!
  attestations: Int
  modules: Int
  portals: Int
  schemas: Int
}

type Issuer @entity {
  id: ID!
  auditInformation: AuditInformation!
}

type RegistryVersion @entity {
  id: ID!
  versionNumber: Int
  timestamp: BigInt
  auditInformation: AuditInformation!
}

type AuditInformation @entity {
  id: ID!
  creation: Audit!
  lastModification: Audit!
  modifications: [Audit!]!
}

type Audit @entity {
  id: ID!
  blockNumber: BigInt!
  transactionHash: Bytes!
  transactionTimestamp: BigInt!
  fromAddress: Bytes!
  toAddress: Bytes
  valueTransferred: BigInt
  gasPrice: BigInt
}
