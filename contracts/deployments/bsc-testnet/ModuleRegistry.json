{
  "abi": [
    { "type": "constructor", "inputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "bulkRunModules",
      "inputs": [
        { "name": "modulesAddresses", "type": "address[]", "internalType": "address[]" },
        {
          "name": "attestationsPayloads",
          "type": "tuple[]",
          "internalType": "struct AttestationPayload[]",
          "components": [
            { "name": "schemaId", "type": "bytes32", "internalType": "bytes32" },
            { "name": "expirationDate", "type": "uint64", "internalType": "uint64" },
            { "name": "subject", "type": "bytes", "internalType": "bytes" },
            { "name": "attestationData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "validationPayloads", "type": "bytes[][]", "internalType": "bytes[][]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "bulkRunModulesV2",
      "inputs": [
        { "name": "modulesAddresses", "type": "address[]", "internalType": "address[]" },
        {
          "name": "attestationPayloads",
          "type": "tuple[]",
          "internalType": "struct AttestationPayload[]",
          "components": [
            { "name": "schemaId", "type": "bytes32", "internalType": "bytes32" },
            { "name": "expirationDate", "type": "uint64", "internalType": "uint64" },
            { "name": "subject", "type": "bytes", "internalType": "bytes" },
            { "name": "attestationData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "validationPayloads", "type": "bytes[][]", "internalType": "bytes[][]" },
        { "name": "initialCaller", "type": "address", "internalType": "address" },
        { "name": "attester", "type": "address", "internalType": "address" },
        { "name": "operationType", "type": "uint8", "internalType": "enum OperationType" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getModulesNumber",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    { "type": "function", "name": "initialize", "inputs": [], "outputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "isContractAddress",
      "inputs": [{ "name": "contractAddress", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isRegistered",
      "inputs": [{ "name": "moduleAddress", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "moduleAddresses",
      "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "modules",
      "inputs": [{ "name": "id", "type": "address", "internalType": "address" }],
      "outputs": [
        { "name": "moduleAddress", "type": "address", "internalType": "address" },
        { "name": "name", "type": "string", "internalType": "string" },
        { "name": "description", "type": "string", "internalType": "string" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "register",
      "inputs": [
        { "name": "name", "type": "string", "internalType": "string" },
        { "name": "description", "type": "string", "internalType": "string" },
        { "name": "moduleAddress", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    { "type": "function", "name": "renounceOwnership", "inputs": [], "outputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "router",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract IRouter" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "runModules",
      "inputs": [
        { "name": "modulesAddresses", "type": "address[]", "internalType": "address[]" },
        {
          "name": "attestationPayload",
          "type": "tuple",
          "internalType": "struct AttestationPayload",
          "components": [
            { "name": "schemaId", "type": "bytes32", "internalType": "bytes32" },
            { "name": "expirationDate", "type": "uint64", "internalType": "uint64" },
            { "name": "subject", "type": "bytes", "internalType": "bytes" },
            { "name": "attestationData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "validationPayloads", "type": "bytes[]", "internalType": "bytes[]" },
        { "name": "value", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "runModulesV2",
      "inputs": [
        { "name": "modulesAddresses", "type": "address[]", "internalType": "address[]" },
        {
          "name": "attestationPayload",
          "type": "tuple",
          "internalType": "struct AttestationPayload",
          "components": [
            { "name": "schemaId", "type": "bytes32", "internalType": "bytes32" },
            { "name": "expirationDate", "type": "uint64", "internalType": "uint64" },
            { "name": "subject", "type": "bytes", "internalType": "bytes" },
            { "name": "attestationData", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "validationPayloads", "type": "bytes[]", "internalType": "bytes[]" },
        { "name": "value", "type": "uint256", "internalType": "uint256" },
        { "name": "initialCaller", "type": "address", "internalType": "address" },
        { "name": "attester", "type": "address", "internalType": "address" },
        { "name": "operationType", "type": "uint8", "internalType": "enum OperationType" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [{ "name": "newOwner", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateRouter",
      "inputs": [{ "name": "_router", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [{ "name": "version", "type": "uint8", "indexed": false, "internalType": "uint8" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ModuleRegistered",
      "inputs": [
        { "name": "name", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "description", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "moduleAddress", "type": "address", "indexed": false, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        { "name": "previousOwner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "newOwner", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RouterUpdated",
      "inputs": [{ "name": "routerAddress", "type": "address", "indexed": false, "internalType": "address" }],
      "anonymous": false
    },
    { "type": "error", "name": "AttestationPayloadMissing", "inputs": [] },
    { "type": "error", "name": "ModuleAddressInvalid", "inputs": [] },
    { "type": "error", "name": "ModuleAlreadyExists", "inputs": [] },
    { "type": "error", "name": "ModuleInvalid", "inputs": [] },
    { "type": "error", "name": "ModuleNameMissing", "inputs": [] },
    { "type": "error", "name": "ModuleNotRegistered", "inputs": [] },
    { "type": "error", "name": "ModuleValidationPayloadMismatch", "inputs": [] },
    { "type": "error", "name": "OnlyAllowlisted", "inputs": [] },
    { "type": "error", "name": "RouterInvalid", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611900806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a8ee49fe11610097578063e8e253ca11610066578063e8e253ca14610219578063f030bba61461022c578063f2fde38b1461023d578063f887ea401461025057600080fd5b8063a8ee49fe146101be578063c3c5a547146101e0578063c851cc32146101f3578063e2baec4a1461020657600080fd5b80638129fc1c116100d35780638129fc1c146101655780638da5cb5b1461016d5780638ed9606a1461017e578063a8015e43146101ab57600080fd5b80635664d69c146101055780636155fdf71461011a578063715018a61461014a57806379638ef114610152575b600080fd5b610118610113366004610eee565b610263565b005b61012d610128366004610f65565b610535565b6040516001600160a01b0390911681526020015b60405180910390f35b61011861055f565b610118610160366004611254565b610573565b6101186105e4565b6033546001600160a01b031661012d565b61019b61018c366004611310565b6001600160a01b03163b151590565b6040519015158152602001610141565b6101186101b936600461132d565b6106fb565b6101d16101cc366004611310565b61083e565b6040516101419392919061143a565b61019b6101ee366004611310565b61097b565b610118610201366004611310565b6109ae565b61011861021436600461147a565b610a2b565b610118610227366004611501565b610a96565b606754604051908152602001610141565b61011861024b366004611310565b610bc3565b60655461012d906001600160a01b031681565b60655460408051635bed64bb60e11b8152905133926001600160a01b03169163b7dac9769160048083019260209291908290030181865afa1580156102ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d09190611590565b6040516305a3b80960e01b81526001600160a01b03838116600483015291909116906305a3b80990602401602060405180830381865afa158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c91906115ad565b6103595760405163acf8a02d60e01b815260040160405180910390fd5b835160000361037a57604051628fcf4360e71b815260040160405180910390fd5b6001600160a01b0382163b6103a25760405163e9a0ae2960e01b815260040160405180910390fd5b6103b38263367e8d1760e01b610c39565b1580156103ce57506103cc8263078777fd60e01b610c39565b155b156103ec576040516374be437f60e01b815260040160405180910390fd5b6001600160a01b03821660009081526066602052604081206001018054610412906115cf565b9050111561043357604051632157f2d760e01b815260040160405180910390fd5b604080516060810182526001600160a01b03848116808352602080840189815284860189905260009283526066909152939020825181546001600160a01b0319169216919091178155915190919060018201906104909082611658565b50604082015160028201906104a59082611658565b5050606780546001810182556000919091527f9787eeb91fe3101235e4a76063c7023ecb40f923f97916639c598592fa30d6ae0180546001600160a01b0319166001600160a01b038516179055506040517fceccd3e08ae8e7df061ddbcd07655a0d0ee04296ddcf9cb2a95bc7b9e23bd7299061052790869086908690611717565b60405180910390a150505050565b6067818154811061054557600080fd5b6000918252602090912001546001600160a01b0316905081565b610567610c5c565b6105716000610cb6565b565b60005b85518163ffffffff1610156105db576105d387878363ffffffff16815181106105a1576105a1611755565b6020026020010151878463ffffffff16815181106105c1576105c1611755565b602002602001015160008888886106fb565b600101610576565b50505050505050565b600054610100900460ff16158080156106045750600054600160ff909116105b8061061e5750303b15801561061e575060005460ff166001145b6106865760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156106a9576000805461ff0019166101001790555b6106b1610d08565b80156106f8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b50565b8651156105db5784518751146107245760405163083247ad60e01b815260040160405180910390fd5b60005b87518163ffffffff1610156108345761075e888263ffffffff168151811061075157610751611755565b602002602001015161097b565b61077b57604051634e25774f60e11b815260040160405180910390fd5b878163ffffffff168151811061079357610793611755565b60200260200101516001600160a01b0316630678be5a88888463ffffffff16815181106107c2576107c2611755565b602002602001015187898833896040518863ffffffff1660e01b81526004016107f197969594939291906117bf565b600060405180830381600087803b15801561080b57600080fd5b505af115801561081f573d6000803e3d6000fd5b5050505061082d8160010190565b9050610727565b5050505050505050565b606660205260009081526040902080546001820180546001600160a01b03909216929161086a906115cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610896906115cf565b80156108e35780601f106108b8576101008083540402835291602001916108e3565b820191906000526020600020905b8154815290600101906020018083116108c657829003601f168201915b5050505050908060020180546108f8906115cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610924906115cf565b80156109715780601f1061094657610100808354040283529160200191610971565b820191906000526020600020905b81548152906001019060200180831161095457829003601f168201915b5050505050905083565b6001600160a01b038116600090815260666020526040812060010180548291906109a4906115cf565b9050119050919050565b6109b6610c5c565b6001600160a01b0381166109dd576040516324a2034760e11b815260040160405180910390fd5b606580546001600160a01b0319166001600160a01b0383169081179091556040519081527f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc80906020016106ef565b60005b82518163ffffffff161015610a9057610a8884848363ffffffff1681518110610a5957610a59611755565b6020026020010151848463ffffffff1681518110610a7957610a79611755565b60200260200101516000610a96565b600101610a2e565b50505050565b835115610a90578151845114610abf5760405163083247ad60e01b815260040160405180910390fd5b60005b84518163ffffffff161015610bbc57610aec858263ffffffff168151811061075157610751611755565b610b0957604051634e25774f60e11b815260040160405180910390fd5b848163ffffffff1681518110610b2157610b21611755565b60200260200101516001600160a01b031663378144b085858463ffffffff1681518110610b5057610b50611755565b602002602001015132866040518563ffffffff1660e01b8152600401610b79949392919061183d565b600060405180830381600087803b158015610b9357600080fd5b505af1158015610ba7573d6000803e3d6000fd5b50505050610bb58160010190565b9050610ac2565b5050505050565b610bcb610c5c565b6001600160a01b038116610c305760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161067d565b6106f881610cb6565b6000610c4483610d37565b8015610c555750610c558383610d6b565b9392505050565b6033546001600160a01b031633146105715760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067d565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610d2f5760405162461bcd60e51b815260040161067d9061187f565b610571610df4565b6000610d4a826301ffc9a760e01b610d6b565b8015610d655750610d63826001600160e01b0319610d6b565b155b92915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015610ddd575060208210155b8015610de95750600081115b979650505050505050565b600054610100900460ff16610e1b5760405162461bcd60e51b815260040161067d9061187f565b61057133610cb6565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610e6257610e62610e24565b604052919050565b600082601f830112610e7b57600080fd5b81356001600160401b03811115610e9457610e94610e24565b610ea7601f8201601f1916602001610e3a565b818152846020838601011115610ebc57600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b03811681146106f857600080fd5b600080600060608486031215610f0357600080fd5b83356001600160401b0380821115610f1a57600080fd5b610f2687838801610e6a565b94506020860135915080821115610f3c57600080fd5b50610f4986828701610e6a565b9250506040840135610f5a81610ed9565b809150509250925092565b600060208284031215610f7757600080fd5b5035919050565b60006001600160401b03821115610f9757610f97610e24565b5060051b60200190565b600082601f830112610fb257600080fd5b81356020610fc7610fc283610f7e565b610e3a565b82815260059290921b84018101918181019086841115610fe657600080fd5b8286015b8481101561100a578035610ffd81610ed9565b8352918301918301610fea565b509695505050505050565b60006080828403121561102757600080fd5b604051608081016001600160401b03828210818311171561104a5761104a610e24565b816040528293508435835260208501359150808216821461106a57600080fd5b816020840152604085013591508082111561108457600080fd5b61109086838701610e6a565b604084015260608501359150808211156110a957600080fd5b506110b685828601610e6a565b6060830152505092915050565b600082601f8301126110d457600080fd5b813560206110e4610fc283610f7e565b82815260059290921b8401810191818101908684111561110357600080fd5b8286015b8481101561100a5780356001600160401b038111156111265760008081fd5b6111348986838b0101611015565b845250918301918301611107565b600082601f83011261115357600080fd5b81356020611163610fc283610f7e565b82815260059290921b8401810191818101908684111561118257600080fd5b8286015b8481101561100a5780356001600160401b038111156111a55760008081fd5b6111b38986838b0101610e6a565b845250918301918301611186565b600082601f8301126111d257600080fd5b813560206111e2610fc283610f7e565b82815260059290921b8401810191818101908684111561120157600080fd5b8286015b8481101561100a5780356001600160401b038111156112245760008081fd5b6112328986838b0101611142565b845250918301918301611205565b80356004811061124f57600080fd5b919050565b60008060008060008060c0878903121561126d57600080fd5b86356001600160401b038082111561128457600080fd5b6112908a838b01610fa1565b975060208901359150808211156112a657600080fd5b6112b28a838b016110c3565b965060408901359150808211156112c857600080fd5b506112d589828a016111c1565b94505060608701356112e681610ed9565b925060808701356112f681610ed9565b915061130460a08801611240565b90509295509295509295565b60006020828403121561132257600080fd5b8135610c5581610ed9565b600080600080600080600060e0888a03121561134857600080fd5b87356001600160401b038082111561135f57600080fd5b61136b8b838c01610fa1565b985060208a013591508082111561138157600080fd5b61138d8b838c01611015565b975060408a01359150808211156113a357600080fd5b506113b08a828b01611142565b9550506060880135935060808801356113c881610ed9565b925060a08801356113d881610ed9565b91506113e660c08901611240565b905092959891949750929550565b6000815180845260005b8181101561141a576020818501810151868301820152016113fe565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038416815260606020820181905260009061145e908301856113f4565b828103604084015261147081856113f4565b9695505050505050565b60008060006060848603121561148f57600080fd5b83356001600160401b03808211156114a657600080fd5b6114b287838801610fa1565b945060208601359150808211156114c857600080fd5b6114d4878388016110c3565b935060408601359150808211156114ea57600080fd5b506114f7868287016111c1565b9150509250925092565b6000806000806080858703121561151757600080fd5b84356001600160401b038082111561152e57600080fd5b61153a88838901610fa1565b9550602087013591508082111561155057600080fd5b61155c88838901611015565b9450604087013591508082111561157257600080fd5b5061157f87828801611142565b949793965093946060013593505050565b6000602082840312156115a257600080fd5b8151610c5581610ed9565b6000602082840312156115bf57600080fd5b81518015158114610c5557600080fd5b600181811c908216806115e357607f821691505b60208210810361160357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561165357600081815260208120601f850160051c810160208610156116305750805b601f850160051c820191505b8181101561164f5782815560010161163c565b5050505b505050565b81516001600160401b0381111561167157611671610e24565b6116858161167f84546115cf565b84611609565b602080601f8311600181146116ba57600084156116a25750858301515b600019600386901b1c1916600185901b17855561164f565b600085815260208120601f198616915b828110156116e9578886015182559484019460019091019084016116ca565b50858210156117075787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60608152600061172a60608301866113f4565b828103602084015261173c81866113f4565b91505060018060a01b0383166040830152949350505050565b634e487b7160e01b600052603260045260246000fd5b805182526001600160401b036020820151166020830152600060408201516080604085015261179d60808501826113f4565b9050606083015184820360608601526117b682826113f4565b95945050505050565b60e0815260006117d260e083018a61176b565b82810360208401526117e4818a6113f4565b6001600160a01b038981166040860152606085018990528781166080860152861660a08501529150506004831061182b57634e487b7160e01b600052602160045260246000fd5b8260c083015298975050505050505050565b608081526000611850608083018761176b565b828103602084015261186281876113f4565b6001600160a01b0395909516604084015250506060015292915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220f3b37011f4e3853a62dafc9799abcf51a26b9d29a435436d77cc47ca28308c9c64736f6c63430008150033",
    "sourceMap": "901:10014:49:-:0;;;2494:47;;;;;;;;;-1:-1:-1;2514:22:49;:20;:22::i;:::-;901:10014;;5939:280:24;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:24;;216:2:126;5998:66:24;;;198:21:126;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:126;;;338:37;392:19;;5998:66:24;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:24;6140:15;6125:30;;;;;;6174:28;;564:36:126;;;6174:28:24;;552:2:126;537:18;6174:28:24;;;;;;;6074:139;5939:280::o;422:184:126:-;901:10014:49;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c8063a8ee49fe11610097578063e8e253ca11610066578063e8e253ca14610219578063f030bba61461022c578063f2fde38b1461023d578063f887ea401461025057600080fd5b8063a8ee49fe146101be578063c3c5a547146101e0578063c851cc32146101f3578063e2baec4a1461020657600080fd5b80638129fc1c116100d35780638129fc1c146101655780638da5cb5b1461016d5780638ed9606a1461017e578063a8015e43146101ab57600080fd5b80635664d69c146101055780636155fdf71461011a578063715018a61461014a57806379638ef114610152575b600080fd5b610118610113366004610eee565b610263565b005b61012d610128366004610f65565b610535565b6040516001600160a01b0390911681526020015b60405180910390f35b61011861055f565b610118610160366004611254565b610573565b6101186105e4565b6033546001600160a01b031661012d565b61019b61018c366004611310565b6001600160a01b03163b151590565b6040519015158152602001610141565b6101186101b936600461132d565b6106fb565b6101d16101cc366004611310565b61083e565b6040516101419392919061143a565b61019b6101ee366004611310565b61097b565b610118610201366004611310565b6109ae565b61011861021436600461147a565b610a2b565b610118610227366004611501565b610a96565b606754604051908152602001610141565b61011861024b366004611310565b610bc3565b60655461012d906001600160a01b031681565b60655460408051635bed64bb60e11b8152905133926001600160a01b03169163b7dac9769160048083019260209291908290030181865afa1580156102ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d09190611590565b6040516305a3b80960e01b81526001600160a01b03838116600483015291909116906305a3b80990602401602060405180830381865afa158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c91906115ad565b6103595760405163acf8a02d60e01b815260040160405180910390fd5b835160000361037a57604051628fcf4360e71b815260040160405180910390fd5b6001600160a01b0382163b6103a25760405163e9a0ae2960e01b815260040160405180910390fd5b6103b38263367e8d1760e01b610c39565b1580156103ce57506103cc8263078777fd60e01b610c39565b155b156103ec576040516374be437f60e01b815260040160405180910390fd5b6001600160a01b03821660009081526066602052604081206001018054610412906115cf565b9050111561043357604051632157f2d760e01b815260040160405180910390fd5b604080516060810182526001600160a01b03848116808352602080840189815284860189905260009283526066909152939020825181546001600160a01b0319169216919091178155915190919060018201906104909082611658565b50604082015160028201906104a59082611658565b5050606780546001810182556000919091527f9787eeb91fe3101235e4a76063c7023ecb40f923f97916639c598592fa30d6ae0180546001600160a01b0319166001600160a01b038516179055506040517fceccd3e08ae8e7df061ddbcd07655a0d0ee04296ddcf9cb2a95bc7b9e23bd7299061052790869086908690611717565b60405180910390a150505050565b6067818154811061054557600080fd5b6000918252602090912001546001600160a01b0316905081565b610567610c5c565b6105716000610cb6565b565b60005b85518163ffffffff1610156105db576105d387878363ffffffff16815181106105a1576105a1611755565b6020026020010151878463ffffffff16815181106105c1576105c1611755565b602002602001015160008888886106fb565b600101610576565b50505050505050565b600054610100900460ff16158080156106045750600054600160ff909116105b8061061e5750303b15801561061e575060005460ff166001145b6106865760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156106a9576000805461ff0019166101001790555b6106b1610d08565b80156106f8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b50565b8651156105db5784518751146107245760405163083247ad60e01b815260040160405180910390fd5b60005b87518163ffffffff1610156108345761075e888263ffffffff168151811061075157610751611755565b602002602001015161097b565b61077b57604051634e25774f60e11b815260040160405180910390fd5b878163ffffffff168151811061079357610793611755565b60200260200101516001600160a01b0316630678be5a88888463ffffffff16815181106107c2576107c2611755565b602002602001015187898833896040518863ffffffff1660e01b81526004016107f197969594939291906117bf565b600060405180830381600087803b15801561080b57600080fd5b505af115801561081f573d6000803e3d6000fd5b5050505061082d8160010190565b9050610727565b5050505050505050565b606660205260009081526040902080546001820180546001600160a01b03909216929161086a906115cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610896906115cf565b80156108e35780601f106108b8576101008083540402835291602001916108e3565b820191906000526020600020905b8154815290600101906020018083116108c657829003601f168201915b5050505050908060020180546108f8906115cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610924906115cf565b80156109715780601f1061094657610100808354040283529160200191610971565b820191906000526020600020905b81548152906001019060200180831161095457829003601f168201915b5050505050905083565b6001600160a01b038116600090815260666020526040812060010180548291906109a4906115cf565b9050119050919050565b6109b6610c5c565b6001600160a01b0381166109dd576040516324a2034760e11b815260040160405180910390fd5b606580546001600160a01b0319166001600160a01b0383169081179091556040519081527f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc80906020016106ef565b60005b82518163ffffffff161015610a9057610a8884848363ffffffff1681518110610a5957610a59611755565b6020026020010151848463ffffffff1681518110610a7957610a79611755565b60200260200101516000610a96565b600101610a2e565b50505050565b835115610a90578151845114610abf5760405163083247ad60e01b815260040160405180910390fd5b60005b84518163ffffffff161015610bbc57610aec858263ffffffff168151811061075157610751611755565b610b0957604051634e25774f60e11b815260040160405180910390fd5b848163ffffffff1681518110610b2157610b21611755565b60200260200101516001600160a01b031663378144b085858463ffffffff1681518110610b5057610b50611755565b602002602001015132866040518563ffffffff1660e01b8152600401610b79949392919061183d565b600060405180830381600087803b158015610b9357600080fd5b505af1158015610ba7573d6000803e3d6000fd5b50505050610bb58160010190565b9050610ac2565b5050505050565b610bcb610c5c565b6001600160a01b038116610c305760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161067d565b6106f881610cb6565b6000610c4483610d37565b8015610c555750610c558383610d6b565b9392505050565b6033546001600160a01b031633146105715760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067d565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610d2f5760405162461bcd60e51b815260040161067d9061187f565b610571610df4565b6000610d4a826301ffc9a760e01b610d6b565b8015610d655750610d63826001600160e01b0319610d6b565b155b92915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015610ddd575060208210155b8015610de95750600081115b979650505050505050565b600054610100900460ff16610e1b5760405162461bcd60e51b815260040161067d9061187f565b61057133610cb6565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610e6257610e62610e24565b604052919050565b600082601f830112610e7b57600080fd5b81356001600160401b03811115610e9457610e94610e24565b610ea7601f8201601f1916602001610e3a565b818152846020838601011115610ebc57600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b03811681146106f857600080fd5b600080600060608486031215610f0357600080fd5b83356001600160401b0380821115610f1a57600080fd5b610f2687838801610e6a565b94506020860135915080821115610f3c57600080fd5b50610f4986828701610e6a565b9250506040840135610f5a81610ed9565b809150509250925092565b600060208284031215610f7757600080fd5b5035919050565b60006001600160401b03821115610f9757610f97610e24565b5060051b60200190565b600082601f830112610fb257600080fd5b81356020610fc7610fc283610f7e565b610e3a565b82815260059290921b84018101918181019086841115610fe657600080fd5b8286015b8481101561100a578035610ffd81610ed9565b8352918301918301610fea565b509695505050505050565b60006080828403121561102757600080fd5b604051608081016001600160401b03828210818311171561104a5761104a610e24565b816040528293508435835260208501359150808216821461106a57600080fd5b816020840152604085013591508082111561108457600080fd5b61109086838701610e6a565b604084015260608501359150808211156110a957600080fd5b506110b685828601610e6a565b6060830152505092915050565b600082601f8301126110d457600080fd5b813560206110e4610fc283610f7e565b82815260059290921b8401810191818101908684111561110357600080fd5b8286015b8481101561100a5780356001600160401b038111156111265760008081fd5b6111348986838b0101611015565b845250918301918301611107565b600082601f83011261115357600080fd5b81356020611163610fc283610f7e565b82815260059290921b8401810191818101908684111561118257600080fd5b8286015b8481101561100a5780356001600160401b038111156111a55760008081fd5b6111b38986838b0101610e6a565b845250918301918301611186565b600082601f8301126111d257600080fd5b813560206111e2610fc283610f7e565b82815260059290921b8401810191818101908684111561120157600080fd5b8286015b8481101561100a5780356001600160401b038111156112245760008081fd5b6112328986838b0101611142565b845250918301918301611205565b80356004811061124f57600080fd5b919050565b60008060008060008060c0878903121561126d57600080fd5b86356001600160401b038082111561128457600080fd5b6112908a838b01610fa1565b975060208901359150808211156112a657600080fd5b6112b28a838b016110c3565b965060408901359150808211156112c857600080fd5b506112d589828a016111c1565b94505060608701356112e681610ed9565b925060808701356112f681610ed9565b915061130460a08801611240565b90509295509295509295565b60006020828403121561132257600080fd5b8135610c5581610ed9565b600080600080600080600060e0888a03121561134857600080fd5b87356001600160401b038082111561135f57600080fd5b61136b8b838c01610fa1565b985060208a013591508082111561138157600080fd5b61138d8b838c01611015565b975060408a01359150808211156113a357600080fd5b506113b08a828b01611142565b9550506060880135935060808801356113c881610ed9565b925060a08801356113d881610ed9565b91506113e660c08901611240565b905092959891949750929550565b6000815180845260005b8181101561141a576020818501810151868301820152016113fe565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038416815260606020820181905260009061145e908301856113f4565b828103604084015261147081856113f4565b9695505050505050565b60008060006060848603121561148f57600080fd5b83356001600160401b03808211156114a657600080fd5b6114b287838801610fa1565b945060208601359150808211156114c857600080fd5b6114d4878388016110c3565b935060408601359150808211156114ea57600080fd5b506114f7868287016111c1565b9150509250925092565b6000806000806080858703121561151757600080fd5b84356001600160401b038082111561152e57600080fd5b61153a88838901610fa1565b9550602087013591508082111561155057600080fd5b61155c88838901611015565b9450604087013591508082111561157257600080fd5b5061157f87828801611142565b949793965093946060013593505050565b6000602082840312156115a257600080fd5b8151610c5581610ed9565b6000602082840312156115bf57600080fd5b81518015158114610c5557600080fd5b600181811c908216806115e357607f821691505b60208210810361160357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561165357600081815260208120601f850160051c810160208610156116305750805b601f850160051c820191505b8181101561164f5782815560010161163c565b5050505b505050565b81516001600160401b0381111561167157611671610e24565b6116858161167f84546115cf565b84611609565b602080601f8311600181146116ba57600084156116a25750858301515b600019600386901b1c1916600185901b17855561164f565b600085815260208120601f198616915b828110156116e9578886015182559484019460019091019084016116ca565b50858210156117075787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60608152600061172a60608301866113f4565b828103602084015261173c81866113f4565b91505060018060a01b0383166040830152949350505050565b634e487b7160e01b600052603260045260246000fd5b805182526001600160401b036020820151166020830152600060408201516080604085015261179d60808501826113f4565b9050606083015184820360608601526117b682826113f4565b95945050505050565b60e0815260006117d260e083018a61176b565b82810360208401526117e4818a6113f4565b6001600160a01b038981166040860152606085018990528781166080860152861660a08501529150506004831061182b57634e487b7160e01b600052602160045260246000fd5b8260c083015298975050505050505050565b608081526000611850608083018761176b565b828103602084015261186281876113f4565b6001600160a01b0395909516604084015250506060015292915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220f3b37011f4e3853a62dafc9799abcf51a26b9d29a435436d77cc47ca28308c9c64736f6c63430008150033",
    "sourceMap": "901:10014:49:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3983:993;;;;;;:::i;:::-;;:::i;:::-;;1129:32;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2130:32:126;;;2112:51;;2100:2;2085:18;1129:32:49;;;;;;;;2085:101:23;;;:::i;9741:535:49:-;;;;;;:::i;:::-;;:::i;2594:68::-;;;:::i;1462:85:23:-;1534:6;;-1:-1:-1;;;;;1534:6:23;1462:85;;3399:128:49;;;;;;:::i;:::-;-1:-1:-1;;;;;3491:27:49;;:31;;;3399:128;;;;8688:14:126;;8681:22;8663:41;;8651:2;8636:18;3399:128:49;8523:187:126;6878:1008:49;;;;;;:::i;:::-;;:::i;1034:51::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;10778:135::-;;;;;;:::i;:::-;;:::i;3031:180::-;;;;;;:::i;:::-;;:::i;8636:348::-;;;;;;:::i;:::-;;:::i;5368:858::-;;;;;;:::i;:::-;;:::i;10469:98::-;10540:15;:22;10469:98;;12924:25:126;;;12912:2;12897:18;10469:98:49;12778:177:126;2335:198:23;;;;;;:::i;:::-;;:::i;951:21:49:-;;;;;-1:-1:-1;;;;;951:21:49;;;3983:993;2827:6;;:26;;;-1:-1:-1;;;2827:26:49;;;;4110:10;;-1:-1:-1;;;;;2827:6:49;;:24;;:26;;;;;;;;;;;;;;:6;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2812:62;;-1:-1:-1;;;2812:62:49;;-1:-1:-1;;;;;2130:32:126;;;2812:62:49;;;2112:51:126;2812:56:49;;;;;;;2085:18:126;;2812:62:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2807:93;;2883:17;;-1:-1:-1;;;2883:17:49;;;;;;;;;;;2807:93;4138:4:::1;4132:18;4154:1;4132:23:::0;4128:55:::1;;4164:19;;-1:-1:-1::0;;;4164:19:49::1;;;;;;;;;;;4128:55;-1:-1:-1::0;;;;;3491:27:49;;;4247:68:::1;;4293:22;;-1:-1:-1::0;;;4293:22:49::1;;;;;;;;;;;4247:68;4407:91;4450:13;-1:-1:-1::0;;;4407:42:49::1;:91::i;:::-;4406:92;:196;;;;;4509:93;4552:13;-1:-1:-1::0;;;4509:42:49::1;:93::i;:::-;4508:94;4406:196;4395:251;;;4624:15;;-1:-1:-1::0;;;4624:15:49::1;;;;;;;;;;;4395:251;-1:-1:-1::0;;;;;4728:22:49;::::1;4766:1;4728:22:::0;;;:7:::1;:22;::::0;;;;:27:::1;;4722:41:::0;;::::1;::::0;::::1;:::i;:::-;;;:45;4718:79;;;4776:21;;-1:-1:-1::0;;;4776:21:49::1;;;;;;;;;;;4718:79;4829:40;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4829:40:49;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;4804:22:49;;;:7:::1;:22:::0;;;;;;:65;;;;-1:-1:-1;;;;;;4804:65:49::1;::::0;::::1;::::0;;;::::1;::::0;;;;4829:40;;4804:22;-1:-1:-1;4804:65:49;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;4804:65:49::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;;4875:15:49::1;:35:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;4875:35:49;;;;;::::1;::::0;;-1:-1:-1;;;;;;4875:35:49::1;-1:-1:-1::0;;;;;4875:35:49;::::1;;::::0;;-1:-1:-1;4921:50:49::1;::::0;::::1;::::0;::::1;::::0;4938:4;;4944:11;;4875:35;;4921:50:::1;:::i;:::-;;;;;;;;3983:993:::0;;;;:::o;1129:32::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1129:32:49;;-1:-1:-1;1129:32:49;:::o;2085:101:23:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;:::-;2085:101::o:0;9741:535:49:-;10004:8;9999:273;10022:19;:26;10018:1;:30;;;9999:273;;;10081:184;10103:16;10129:19;10149:1;10129:22;;;;;;;;;;:::i;:::-;;;;;;;10161:18;10180:1;10161:21;;;;;;;;;;:::i;:::-;;;;;;;10192:1;10203:13;10226:8;10244:13;10081:12;:184::i;:::-;865:1:47;861:5;9999:273:49;;;;9741:535;;;;;;:::o;2594:68::-;3279:19:24;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:24;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:24;3491:27:49;:31;;;3387:66:24;;-1:-1:-1;3436:12:24;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:24;;17131:2:126;3325:201:24;;;17113:21:126;17170:2;17150:18;;;17143:30;17209:34;17189:18;;;17182:62;-1:-1:-1;;;17260:18:126;;;17253:44;17314:19;;3325:201:24;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:24;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:24;;;;;3562:65;2641:16:49::1;:14;:16::i;:::-;3651:14:24::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:24;;;3721:14;;-1:-1:-1;17496:36:126;;3721:14:24;;17484:2:126;17469:18;3721:14:24;;;;;;;;3647:99;3269:483;2594:68:49:o;6878:1008::-;7205:23;;7201:41;7235:7;7201:41;7365:18;:25;7338:16;:23;:52;7334:98;;7399:33;;-1:-1:-1;;;7399:33:49;;;;;;;;;;;7334:98;7518:8;7513:369;7536:16;:23;7532:1;:27;;;7513:369;;;7597:33;7610:16;7627:1;7610:19;;;;;;;;;;:::i;:::-;;;;;;;7597:12;:33::i;:::-;7592:68;;7639:21;;-1:-1:-1;;;7639:21:49;;;;;;;;;;;7592:68;7685:16;7702:1;7685:19;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7668:41:49;;7719:18;7747;7766:1;7747:21;;;;;;;;;;:::i;:::-;;;;;;;7778:13;7801:5;7816:8;7834:10;7854:13;7668:207;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7565:17;7580:1;865::47;861:5;;779:94;7565:17:49;7561:21;;7513:369;;;;6878:1008;;;;;;;:::o;1034:51::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1034:51:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10778:135::-;-1:-1:-1;;;;;10869:22:49;;10844:4;10869:22;;;:7;:22;;;;;:27;;10863:41;;10844:4;;10869:27;10863:41;;;:::i;:::-;;;:45;10856:52;;10778:135;;;:::o;3031:180::-;1355:13:23;:11;:13::i;:::-;-1:-1:-1;;;;;3097:21:49;::::1;3093:49;;3127:15;;-1:-1:-1::0;;;3127:15:49::1;;;;;;;;;;;3093:49;3148:6;:25:::0;;-1:-1:-1;;;;;;3148:25:49::1;-1:-1:-1::0;;;;;3148:25:49;::::1;::::0;;::::1;::::0;;;3184:22:::1;::::0;2112:51:126;;;3184:22:49::1;::::0;2100:2:126;2085:18;3184:22:49::1;1966:203:126::0;8636:348:49;8816:8;8811:169;8834:20;:27;8830:1;:31;;;8811:169;;;8894:79;8905:16;8923:20;8944:1;8923:23;;;;;;;;;;:::i;:::-;;;;;;;8948:18;8967:1;8948:21;;;;;;;;;;:::i;:::-;;;;;;;8971:1;8894:10;:79::i;:::-;865:1:47;861:5;8811:169:49;;;;8636:348;;;:::o;5368:858::-;5611:23;;5607:41;5641:7;5607:41;5771:18;:25;5744:16;:23;:52;5740:98;;5805:33;;-1:-1:-1;;;5805:33:49;;;;;;;;;;;5740:98;5924:8;5919:303;5942:16;:23;5938:1;:27;;;5919:303;;;6003:33;6016:16;6033:1;6016:19;;;;;;;;;;:::i;6003:33::-;5998:68;;6045:21;;-1:-1:-1;;;6045:21:49;;;;;;;;;;;5998:68;6130:16;6147:1;6130:19;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6115:39:49;;6155:18;6175;6194:1;6175:21;;;;;;;;;;:::i;:::-;;;;;;;6198:9;6209:5;6115:100;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5971:17;5986:1;865::47;861:5;;779:94;5971:17:49;5967:21;;5919:303;;;;5368:858;;;;:::o;2335:198:23:-;1355:13;:11;:13::i;:::-;-1:-1:-1;;;;;2423:22:23;::::1;2415:73;;;::::0;-1:-1:-1;;;2415:73:23;;19937:2:126;2415:73:23::1;::::0;::::1;19919:21:126::0;19976:2;19956:18;;;19949:30;20015:34;19995:18;;;19988:62;-1:-1:-1;;;20066:18:126;;;20059:36;20112:19;;2415:73:23::1;19735:402:126::0;2415:73:23::1;2498:28;2517:8;2498:18;:28::i;1382:282:27:-:0;1469:4;1576:23;1591:7;1576:14;:23::i;:::-;:81;;;;;1603:54;1636:7;1645:11;1603:32;:54::i;:::-;1569:88;1382:282;-1:-1:-1;;;1382:282:27:o;1620:130:23:-;1534:6;;-1:-1:-1;;;;;1534:6:23;965:10:26;1683:23:23;1675:68;;;;-1:-1:-1;;;1675:68:23;;20344:2:126;1675:68:23;;;20326:21:126;;;20363:18;;;20356:30;20422:34;20402:18;;;20395:62;20474:18;;1675:68:23;20142:356:126;2687:187:23;2779:6;;;-1:-1:-1;;;;;2795:17:23;;;-1:-1:-1;;;;;;2795:17:23;;;;;;;2827:40;;2779:6;;;2795:17;2779:6;;2827:40;;2760:16;;2827:40;2750:124;2687:187;:::o;1024:95::-;5374:13:24;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:24;;;;;;;:::i;:::-;1086:26:23::1;:24;:26::i;726:438:27:-:0;790:4;997:79;1030:7;-1:-1:-1;;;997:32:27;:79::i;:::-;:160;;;;-1:-1:-1;1093:64:27;1126:7;-1:-1:-1;;;;;;1093:32:27;:64::i;:::-;1092:65;997:160;978:179;726:438;-1:-1:-1;;726:438:27:o;4454:658::-;4625:82;;;-1:-1:-1;;;;;;21077:33:126;;4625:82:27;;;;21059:52:126;;;;4625:82:27;;;;;;;;;;21032:18:126;;;;4625:82:27;;;;;;;;;-1:-1:-1;;;;;4625:82:27;-1:-1:-1;;;4625:82:27;;;4915:20;;4556:4;;4625:82;4556:4;;;;;;4625:82;4556:4;;4915:20;4880:7;4873:5;4862:86;4851:97;;4975:16;4961:30;;5025:4;5019:11;5004:26;;5057:7;:29;;;;;5082:4;5068:10;:18;;5057:29;:48;;;;;5104:1;5090:11;:15;5057:48;5050:55;4454:658;-1:-1:-1;;;;;;;4454:658:27:o;1125:111:23:-;5374:13:24;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:24;;;;;;;:::i;:::-;1197:32:23::1;965:10:26::0;1197:18:23::1;:32::i;14:127:126:-:0;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:126;247:40;;-1:-1:-1;;;;;302:34:126;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:126:o;426:531::-;469:5;522:3;515:4;507:6;503:17;499:27;489:55;;540:1;537;530:12;489:55;576:6;563:20;-1:-1:-1;;;;;598:2:126;595:26;592:52;;;624:18;;:::i;:::-;668:55;711:2;692:13;;-1:-1:-1;;688:27:126;717:4;684:38;668:55;:::i;:::-;748:2;739:7;732:19;794:3;787:4;782:2;774:6;770:15;766:26;763:35;760:55;;;811:1;808;801:12;760:55;876:2;869:4;861:6;857:17;850:4;841:7;837:18;824:55;924:1;899:16;;;917:4;895:27;888:38;;;;903:7;426:531;-1:-1:-1;;;426:531:126:o;962:131::-;-1:-1:-1;;;;;1037:31:126;;1027:42;;1017:70;;1083:1;1080;1073:12;1098:678;1195:6;1203;1211;1264:2;1252:9;1243:7;1239:23;1235:32;1232:52;;;1280:1;1277;1270:12;1232:52;1320:9;1307:23;-1:-1:-1;;;;;1390:2:126;1382:6;1379:14;1376:34;;;1406:1;1403;1396:12;1376:34;1429:50;1471:7;1462:6;1451:9;1447:22;1429:50;:::i;:::-;1419:60;;1532:2;1521:9;1517:18;1504:32;1488:48;;1561:2;1551:8;1548:16;1545:36;;;1577:1;1574;1567:12;1545:36;;1600:52;1644:7;1633:8;1622:9;1618:24;1600:52;:::i;:::-;1590:62;;;1702:2;1691:9;1687:18;1674:32;1715:31;1740:5;1715:31;:::i;:::-;1765:5;1755:15;;;1098:678;;;;;:::o;1781:180::-;1840:6;1893:2;1881:9;1872:7;1868:23;1864:32;1861:52;;;1909:1;1906;1899:12;1861:52;-1:-1:-1;1932:23:126;;1781:180;-1:-1:-1;1781:180:126:o;2174:183::-;2234:4;-1:-1:-1;;;;;2259:6:126;2256:30;2253:56;;;2289:18;;:::i;:::-;-1:-1:-1;2334:1:126;2330:14;2346:4;2326:25;;2174:183::o;2362:737::-;2416:5;2469:3;2462:4;2454:6;2450:17;2446:27;2436:55;;2487:1;2484;2477:12;2436:55;2523:6;2510:20;2549:4;2573:60;2589:43;2629:2;2589:43;:::i;:::-;2573:60;:::i;:::-;2667:15;;;2753:1;2749:10;;;;2737:23;;2733:32;;;2698:12;;;;2777:15;;;2774:35;;;2805:1;2802;2795:12;2774:35;2841:2;2833:6;2829:15;2853:217;2869:6;2864:3;2861:15;2853:217;;;2949:3;2936:17;2966:31;2991:5;2966:31;:::i;:::-;3010:18;;3048:12;;;;2886;;2853:217;;;-1:-1:-1;3088:5:126;2362:737;-1:-1:-1;;;;;;2362:737:126:o;3104:963::-;3169:5;3217:4;3205:9;3200:3;3196:19;3192:30;3189:50;;;3235:1;3232;3225:12;3189:50;3268:2;3262:9;3310:4;3302:6;3298:17;-1:-1:-1;;;;;3402:6:126;3390:10;3387:22;3382:2;3370:10;3367:18;3364:46;3361:72;;;3413:18;;:::i;:::-;3453:10;3449:2;3442:22;3482:6;3473:15;;3525:9;3512:23;3504:6;3497:39;3588:2;3577:9;3573:18;3560:32;3545:47;;3636:2;3627:7;3623:16;3614:7;3611:29;3601:57;;3654:1;3651;3644:12;3601:57;3691:7;3686:2;3678:6;3674:15;3667:32;3750:2;3739:9;3735:18;3722:32;3708:46;;3777:2;3769:6;3766:14;3763:34;;;3793:1;3790;3783:12;3763:34;3830:46;3872:3;3863:6;3852:9;3848:22;3830:46;:::i;:::-;3825:2;3817:6;3813:15;3806:71;3930:2;3919:9;3915:18;3902:32;3886:48;;3959:2;3949:8;3946:16;3943:36;;;3975:1;3972;3965:12;3943:36;;4012:48;4056:3;4045:8;4034:9;4030:24;4012:48;:::i;:::-;4007:2;3999:6;3995:15;3988:73;;;3104:963;;;;:::o;4072:926::-;4144:5;4197:3;4190:4;4182:6;4178:17;4174:27;4164:55;;4215:1;4212;4205:12;4164:55;4251:6;4238:20;4277:4;4301:60;4317:43;4357:2;4317:43;:::i;4301:60::-;4395:15;;;4481:1;4477:10;;;;4465:23;;4461:32;;;4426:12;;;;4505:15;;;4502:35;;;4533:1;4530;4523:12;4502:35;4569:2;4561:6;4557:15;4581:388;4597:6;4592:3;4589:15;4581:388;;;4683:3;4670:17;-1:-1:-1;;;;;4706:11:126;4703:35;4700:125;;;4779:1;4808:2;4804;4797:14;4700:125;4850:76;4922:3;4917:2;4903:11;4895:6;4891:24;4887:33;4850:76;:::i;:::-;4838:89;;-1:-1:-1;4947:12:126;;;;4614;;4581:388;;5003:887;5055:5;5108:3;5101:4;5093:6;5089:17;5085:27;5075:55;;5126:1;5123;5116:12;5075:55;5162:6;5149:20;5188:4;5212:60;5228:43;5268:2;5228:43;:::i;5212:60::-;5306:15;;;5392:1;5388:10;;;;5376:23;;5372:32;;;5337:12;;;;5416:15;;;5413:35;;;5444:1;5441;5434:12;5413:35;5480:2;5472:6;5468:15;5492:369;5508:6;5503:3;5500:15;5492:369;;;5594:3;5581:17;-1:-1:-1;;;;;5617:11:126;5614:35;5611:125;;;5690:1;5719:2;5715;5708:14;5611:125;5761:57;5814:3;5809:2;5795:11;5787:6;5783:24;5779:33;5761:57;:::i;:::-;5749:70;;-1:-1:-1;5839:12:126;;;;5525;;5492:369;;5895:906;5957:5;6010:3;6003:4;5995:6;5991:17;5987:27;5977:55;;6028:1;6025;6018:12;5977:55;6064:6;6051:20;6090:4;6114:60;6130:43;6170:2;6130:43;:::i;6114:60::-;6208:15;;;6294:1;6290:10;;;;6278:23;;6274:32;;;6239:12;;;;6318:15;;;6315:35;;;6346:1;6343;6336:12;6315:35;6382:2;6374:6;6370:15;6394:378;6410:6;6405:3;6402:15;6394:378;;;6496:3;6483:17;-1:-1:-1;;;;;6519:11:126;6516:35;6513:125;;;6592:1;6621:2;6617;6610:14;6513:125;6663:66;6725:3;6720:2;6706:11;6698:6;6694:24;6690:33;6663:66;:::i;:::-;6651:79;;-1:-1:-1;6750:12:126;;;;6427;;6394:378;;6806:154;6885:20;;6934:1;6924:12;;6914:40;;6950:1;6947;6940:12;6914:40;6806:154;;;:::o;6965:1301::-;7234:6;7242;7250;7258;7266;7274;7327:3;7315:9;7306:7;7302:23;7298:33;7295:53;;;7344:1;7341;7334:12;7295:53;7384:9;7371:23;-1:-1:-1;;;;;7454:2:126;7446:6;7443:14;7440:34;;;7470:1;7467;7460:12;7440:34;7493:61;7546:7;7537:6;7526:9;7522:22;7493:61;:::i;:::-;7483:71;;7607:2;7596:9;7592:18;7579:32;7563:48;;7636:2;7626:8;7623:16;7620:36;;;7652:1;7649;7642:12;7620:36;7675:81;7748:7;7737:8;7726:9;7722:24;7675:81;:::i;:::-;7665:91;;7809:2;7798:9;7794:18;7781:32;7765:48;;7838:2;7828:8;7825:16;7822:36;;;7854:1;7851;7844:12;7822:36;;7877:71;7940:7;7929:8;7918:9;7914:24;7877:71;:::i;:::-;7867:81;;;7998:2;7987:9;7983:18;7970:32;8011:31;8036:5;8011:31;:::i;:::-;8061:5;-1:-1:-1;8118:3:126;8103:19;;8090:33;8132;8090;8132;:::i;:::-;8184:7;-1:-1:-1;8210:50:126;8255:3;8240:19;;8210:50;:::i;:::-;8200:60;;6965:1301;;;;;;;;:::o;8271:247::-;8330:6;8383:2;8371:9;8362:7;8358:23;8354:32;8351:52;;;8399:1;8396;8389:12;8351:52;8438:9;8425:23;8457:31;8482:5;8457:31;:::i;8715:1300::-;8943:6;8951;8959;8967;8975;8983;8991;9044:3;9032:9;9023:7;9019:23;9015:33;9012:53;;;9061:1;9058;9051:12;9012:53;9101:9;9088:23;-1:-1:-1;;;;;9171:2:126;9163:6;9160:14;9157:34;;;9187:1;9184;9177:12;9157:34;9210:61;9263:7;9254:6;9243:9;9239:22;9210:61;:::i;:::-;9200:71;;9324:2;9313:9;9309:18;9296:32;9280:48;;9353:2;9343:8;9340:16;9337:36;;;9369:1;9366;9359:12;9337:36;9392:71;9455:7;9444:8;9433:9;9429:24;9392:71;:::i;:::-;9382:81;;9516:2;9505:9;9501:18;9488:32;9472:48;;9545:2;9535:8;9532:16;9529:36;;;9561:1;9558;9551:12;9529:36;;9584:61;9637:7;9626:8;9615:9;9611:24;9584:61;:::i;:::-;9574:71;;;9692:2;9681:9;9677:18;9664:32;9654:42;;9746:3;9735:9;9731:19;9718:33;9760:31;9785:5;9760:31;:::i;:::-;9810:5;-1:-1:-1;9867:3:126;9852:19;;9839:33;9881;9839;9881;:::i;:::-;9933:7;-1:-1:-1;9959:50:126;10004:3;9989:19;;9959:50;:::i;:::-;9949:60;;8715:1300;;;;;;;;;;:::o;10020:423::-;10062:3;10100:5;10094:12;10127:6;10122:3;10115:19;10152:1;10162:162;10176:6;10173:1;10170:13;10162:162;;;10238:4;10294:13;;;10290:22;;10284:29;10266:11;;;10262:20;;10255:59;10191:12;10162:162;;;10166:3;10369:1;10362:4;10353:6;10348:3;10344:16;10340:27;10333:38;10432:4;10425:2;10421:7;10416:2;10408:6;10404:15;10400:29;10395:3;10391:39;10387:50;10380:57;;;10020:423;;;;:::o;10448:480::-;-1:-1:-1;;;;;10673:32:126;;10655:51;;10742:2;10737;10722:18;;10715:30;;;-1:-1:-1;;10768:45:126;;10794:18;;10786:6;10768:45;:::i;:::-;10861:9;10853:6;10849:22;10844:2;10833:9;10829:18;10822:50;10889:33;10915:6;10907;10889:33;:::i;:::-;10881:41;10448:480;-1:-1:-1;;;;;;10448:480:126:o;10933:918::-;11156:6;11164;11172;11225:2;11213:9;11204:7;11200:23;11196:32;11193:52;;;11241:1;11238;11231:12;11193:52;11281:9;11268:23;-1:-1:-1;;;;;11351:2:126;11343:6;11340:14;11337:34;;;11367:1;11364;11357:12;11337:34;11390:61;11443:7;11434:6;11423:9;11419:22;11390:61;:::i;:::-;11380:71;;11504:2;11493:9;11489:18;11476:32;11460:48;;11533:2;11523:8;11520:16;11517:36;;;11549:1;11546;11539:12;11517:36;11572:81;11645:7;11634:8;11623:9;11619:24;11572:81;:::i;:::-;11562:91;;11706:2;11695:9;11691:18;11678:32;11662:48;;11735:2;11725:8;11722:16;11719:36;;;11751:1;11748;11741:12;11719:36;;11774:71;11837:7;11826:8;11815:9;11811:24;11774:71;:::i;:::-;11764:81;;;10933:918;;;;;:::o;11856:917::-;12038:6;12046;12054;12062;12115:3;12103:9;12094:7;12090:23;12086:33;12083:53;;;12132:1;12129;12122:12;12083:53;12172:9;12159:23;-1:-1:-1;;;;;12242:2:126;12234:6;12231:14;12228:34;;;12258:1;12255;12248:12;12228:34;12281:61;12334:7;12325:6;12314:9;12310:22;12281:61;:::i;:::-;12271:71;;12395:2;12384:9;12380:18;12367:32;12351:48;;12424:2;12414:8;12411:16;12408:36;;;12440:1;12437;12430:12;12408:36;12463:71;12526:7;12515:8;12504:9;12500:24;12463:71;:::i;:::-;12453:81;;12587:2;12576:9;12572:18;12559:32;12543:48;;12616:2;12606:8;12603:16;12600:36;;;12632:1;12629;12622:12;12600:36;;12655:61;12708:7;12697:8;12686:9;12682:24;12655:61;:::i;:::-;11856:917;;;;-1:-1:-1;12645:71:126;;12763:2;12748:18;12735:32;;-1:-1:-1;;;11856:917:126:o;13185:251::-;13255:6;13308:2;13296:9;13287:7;13283:23;13279:32;13276:52;;;13324:1;13321;13314:12;13276:52;13356:9;13350:16;13375:31;13400:5;13375:31;:::i;13441:277::-;13508:6;13561:2;13549:9;13540:7;13536:23;13532:32;13529:52;;;13577:1;13574;13567:12;13529:52;13609:9;13603:16;13662:5;13655:13;13648:21;13641:5;13638:32;13628:60;;13684:1;13681;13674:12;13723:380;13802:1;13798:12;;;;13845;;;13866:61;;13920:4;13912:6;13908:17;13898:27;;13866:61;13973:2;13965:6;13962:14;13942:18;13939:38;13936:161;;14019:10;14014:3;14010:20;14007:1;14000:31;14054:4;14051:1;14044:15;14082:4;14079:1;14072:15;13936:161;;13723:380;;;:::o;14234:545::-;14336:2;14331:3;14328:11;14325:448;;;14372:1;14397:5;14393:2;14386:17;14442:4;14438:2;14428:19;14512:2;14500:10;14496:19;14493:1;14489:27;14483:4;14479:38;14548:4;14536:10;14533:20;14530:47;;;-1:-1:-1;14571:4:126;14530:47;14626:2;14621:3;14617:12;14614:1;14610:20;14604:4;14600:31;14590:41;;14681:82;14699:2;14692:5;14689:13;14681:82;;;14744:17;;;14725:1;14714:13;14681:82;;;14685:3;;;14325:448;14234:545;;;:::o;14955:1352::-;15081:3;15075:10;-1:-1:-1;;;;;15100:6:126;15097:30;15094:56;;;15130:18;;:::i;:::-;15159:97;15249:6;15209:38;15241:4;15235:11;15209:38;:::i;:::-;15203:4;15159:97;:::i;:::-;15311:4;;15375:2;15364:14;;15392:1;15387:663;;;;16094:1;16111:6;16108:89;;;-1:-1:-1;16163:19:126;;;16157:26;16108:89;-1:-1:-1;;14912:1:126;14908:11;;;14904:24;14900:29;14890:40;14936:1;14932:11;;;14887:57;16210:81;;15357:944;;15387:663;14181:1;14174:14;;;14218:4;14205:18;;-1:-1:-1;;15423:20:126;;;15541:236;15555:7;15552:1;15549:14;15541:236;;;15644:19;;;15638:26;15623:42;;15736:27;;;;15704:1;15692:14;;;;15571:19;;15541:236;;;15545:3;15805:6;15796:7;15793:19;15790:201;;;15866:19;;;15860:26;-1:-1:-1;;15949:1:126;15945:14;;;15961:3;15941:24;15937:37;15933:42;15918:58;15903:74;;15790:201;-1:-1:-1;;;;;16037:1:126;16021:14;;;16017:22;16004:36;;-1:-1:-1;14955:1352:126:o;16312:480::-;16537:2;16526:9;16519:21;16500:4;16563:45;16604:2;16593:9;16589:18;16581:6;16563:45;:::i;:::-;16656:9;16648:6;16644:22;16639:2;16628:9;16624:18;16617:50;16684:33;16710:6;16702;16684:33;:::i;:::-;16676:41;;;16782:1;16778;16773:3;16769:11;16765:19;16757:6;16753:32;16748:2;16737:9;16733:18;16726:60;16312:480;;;;;;:::o;16797:127::-;16858:10;16853:3;16849:20;16846:1;16839:31;16889:4;16886:1;16879:15;16913:4;16910:1;16903:15;17543:504;17640:5;17634:12;17629:3;17622:25;-1:-1:-1;;;;;17700:4:126;17693:5;17689:16;17683:23;17679:48;17672:4;17667:3;17663:14;17656:72;17604:3;17774:4;17767:5;17763:16;17757:23;17812:4;17805;17800:3;17796:14;17789:28;17838:47;17879:4;17874:3;17870:14;17856:12;17838:47;:::i;:::-;17826:59;;17933:4;17926:5;17922:16;17916:23;17981:3;17975:4;17971:14;17964:4;17959:3;17955:14;17948:38;18002:39;18036:4;18020:14;18002:39;:::i;:::-;17995:46;17543:504;-1:-1:-1;;;;;17543:504:126:o;18052:1049::-;18458:3;18447:9;18440:22;18421:4;18485:65;18545:3;18534:9;18530:19;18522:6;18485:65;:::i;:::-;18598:9;18590:6;18586:22;18581:2;18570:9;18566:18;18559:50;18626:33;18652:6;18644;18626:33;:::i;:::-;-1:-1:-1;;;;;18733:15:126;;;18728:2;18713:18;;18706:43;18780:2;18765:18;;18758:34;;;18829:15;;;18823:3;18808:19;;18801:44;18882:15;;18686:3;18861:19;;18854:44;18618:41;-1:-1:-1;;18928:1:126;18917:13;;18907:144;;18973:10;18968:3;18964:20;18961:1;18954:31;19008:4;19005:1;18998:15;19036:4;19033:1;19026:15;18907:144;19088:6;19082:3;19071:9;19067:19;19060:35;18052:1049;;;;;;;;;;:::o;19106:624::-;19411:3;19400:9;19393:22;19374:4;19438:65;19498:3;19487:9;19483:19;19475:6;19438:65;:::i;:::-;19551:9;19543:6;19539:22;19534:2;19523:9;19519:18;19512:50;19579:33;19605:6;19597;19579:33;:::i;:::-;-1:-1:-1;;;;;19648:32:126;;;;19643:2;19628:18;;19621:60;-1:-1:-1;;19712:2:126;19697:18;19690:34;19571:41;19106:624;-1:-1:-1;;19106:624:126:o;20503:407::-;20705:2;20687:21;;;20744:2;20724:18;;;20717:30;20783:34;20778:2;20763:18;;20756:62;-1:-1:-1;;;20849:2:126;20834:18;;20827:41;20900:3;20885:19;;20503:407::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "bulkRunModules(address[],(bytes32,uint64,bytes,bytes)[],bytes[][])": "e2baec4a",
    "bulkRunModulesV2(address[],(bytes32,uint64,bytes,bytes)[],bytes[][],address,address,uint8)": "79638ef1",
    "getModulesNumber()": "f030bba6",
    "initialize()": "8129fc1c",
    "isContractAddress(address)": "8ed9606a",
    "isRegistered(address)": "c3c5a547",
    "moduleAddresses(uint256)": "6155fdf7",
    "modules(address)": "a8ee49fe",
    "owner()": "8da5cb5b",
    "register(string,string,address)": "5664d69c",
    "renounceOwnership()": "715018a6",
    "router()": "f887ea40",
    "runModules(address[],(bytes32,uint64,bytes,bytes),bytes[],uint256)": "e8e253ca",
    "runModulesV2(address[],(bytes32,uint64,bytes,bytes),bytes[],uint256,address,address,uint8)": "a8015e43",
    "transferOwnership(address)": "f2fde38b",
    "updateRouter(address)": "c851cc32"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AttestationPayloadMissing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModuleAddressInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModuleAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModuleInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModuleNameMissing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModuleNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModuleValidationPayloadMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyAllowlisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RouterInvalid\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"name\":\"ModuleRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"name\":\"RouterUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"modulesAddresses\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schemaId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"expirationDate\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"subject\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attestationData\",\"type\":\"bytes\"}],\"internalType\":\"struct AttestationPayload[]\",\"name\":\"attestationsPayloads\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[][]\",\"name\":\"validationPayloads\",\"type\":\"bytes[][]\"}],\"name\":\"bulkRunModules\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"modulesAddresses\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schemaId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"expirationDate\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"subject\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attestationData\",\"type\":\"bytes\"}],\"internalType\":\"struct AttestationPayload[]\",\"name\":\"attestationPayloads\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[][]\",\"name\":\"validationPayloads\",\"type\":\"bytes[][]\"},{\"internalType\":\"address\",\"name\":\"initialCaller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"enum OperationType\",\"name\":\"operationType\",\"type\":\"uint8\"}],\"name\":\"bulkRunModulesV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getModulesNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"isContractAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"moduleAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"}],\"name\":\"modules\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"modulesAddresses\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schemaId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"expirationDate\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"subject\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attestationData\",\"type\":\"bytes\"}],\"internalType\":\"struct AttestationPayload\",\"name\":\"attestationPayload\",\"type\":\"tuple\"},{\"internalType\":\"bytes[]\",\"name\":\"validationPayloads\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"runModules\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"modulesAddresses\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schemaId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"expirationDate\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"subject\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attestationData\",\"type\":\"bytes\"}],\"internalType\":\"struct AttestationPayload\",\"name\":\"attestationPayload\",\"type\":\"tuple\"},{\"internalType\":\"bytes[]\",\"name\":\"validationPayloads\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialCaller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"enum OperationType\",\"name\":\"operationType\",\"type\":\"uint8\"}],\"name\":\"runModulesV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"updateRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Consensys\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"bulkRunModules(address[],(bytes32,uint64,bytes,bytes)[],bytes[][])\":{\"details\":\"NOTE: Currently the bulk run modules does not handle payable modules            a default value of 0 is used.DISCLAIMER: This method may have unexpected behavior if one of the checks is done on the attestation ID                  as this ID won't be incremented before the end of the transaction.                  If you need to check the attestation ID, please use the `attest` method.\",\"params\":{\"attestationsPayloads\":\"the payloads to attest\",\"modulesAddresses\":\"the addresses of the registered modules\",\"validationPayloads\":\"the payloads to check for each module\"}},\"bulkRunModulesV2(address[],(bytes32,uint64,bytes,bytes)[],bytes[][],address,address,uint8)\":{\"details\":\"NOTE: Currently the bulk run modules does not handle payable modules            a default value of 0 is used.DISCLAIMER: This method may have unexpected behavior if one of the checks is done on the attestation ID                  as this ID won't be incremented before the end of the transaction.                  If you need to check the attestation ID, please use the `attestV2` method.\",\"params\":{\"attestationPayloads\":\"the payloads to attest\",\"modulesAddresses\":\"the addresses of the registered modules\",\"validationPayloads\":\"the payloads to check for each module\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getModulesNumber()\":{\"details\":\"Returns the length of the `moduleAddresses` array\",\"returns\":{\"_0\":\"The number of Modules already registered\"}},\"isContractAddress(address)\":{\"params\":{\"contractAddress\":\"address to be verified\"},\"returns\":{\"_0\":\"the result as true if it is a smart contract else false\"}},\"isRegistered(address)\":{\"params\":{\"moduleAddress\":\"The address of the Module to check\"},\"returns\":{\"_0\":\"True if the Module is registered, False otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"register(string,string,address)\":{\"details\":\"the module is stored in a mapping, the number of modules is incremented and an event is emitted\",\"params\":{\"description\":\"the module description\",\"moduleAddress\":\"the address of the deployed smart contract\",\"name\":\"the module name\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"runModules(address[],(bytes32,uint64,bytes,bytes),bytes[],uint256)\":{\"details\":\"check if modules are registered and execute run method for each module\",\"params\":{\"attestationPayload\":\"the payload to attest\",\"modulesAddresses\":\"the addresses of the registered modules\",\"validationPayloads\":\"the payloads to check for each module (one payload per module)\"}},\"runModulesV2(address[],(bytes32,uint64,bytes,bytes),bytes[],uint256,address,address,uint8)\":{\"details\":\"check if modules are registered and execute the V2 run method for each module\",\"params\":{\"attestationPayload\":\"the payload to attest\",\"attester\":\"the address defined by the Portal as the attester for this payload\",\"initialCaller\":\"the address of the initial caller (transaction sender)\",\"modulesAddresses\":\"the addresses of the registered modules\",\"validationPayloads\":\"the payloads to check for each module (one payload per module)\",\"value\":\"the value (ETH) optionally passed in the attesting transaction\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateRouter(address)\":{\"details\":\"Only the registry owner can call this method\"}},\"stateVariables\":{\"moduleAddresses\":{\"details\":\"The list of Module addresses\"},\"modules\":{\"details\":\"The list of Modules, accessed by their address\"}},\"title\":\"Module Registry\",\"version\":1},\"userdoc\":{\"errors\":{\"AttestationPayloadMissing()\":[{\"notice\":\"Error thrown when attempting to run modules with no attestation payload provided\"}],\"ModuleAddressInvalid()\":[{\"notice\":\"Error thrown when attempting to add a Module without an address of deployed smart contract\"}],\"ModuleAlreadyExists()\":[{\"notice\":\"Error thrown when an identical Module was already registered\"}],\"ModuleInvalid()\":[{\"notice\":\"Error thrown when attempting to add a Module which has not implemented the IModule interface\"}],\"ModuleNameMissing()\":[{\"notice\":\"Error thrown when attempting to add a Module without a name\"}],\"ModuleNotRegistered()\":[{\"notice\":\"Error thrown when module is not registered\"}],\"ModuleValidationPayloadMismatch()\":[{\"notice\":\"Error thrown when module addresses and validation payload length mismatch\"}],\"OnlyAllowlisted()\":[{\"notice\":\"Error thrown when a non-allowlisted user tries to call a forbidden method\"}],\"RouterInvalid()\":[{\"notice\":\"Error thrown when an invalid Router address is given\"}]},\"events\":{\"ModuleRegistered(string,string,address)\":{\"notice\":\"Event emitted when a Module is registered\"},\"RouterUpdated(address)\":{\"notice\":\"Event emitted when the router is updated\"}},\"kind\":\"user\",\"methods\":{\"bulkRunModules(address[],(bytes32,uint64,bytes,bytes)[],bytes[][])\":{\"notice\":\"Executes the modules validation for all attestations payloads for all given Modules that are registered\"},\"bulkRunModulesV2(address[],(bytes32,uint64,bytes,bytes)[],bytes[][],address,address,uint8)\":{\"notice\":\"Executes the V2 modules validation for all attestations payloads for all given V2 Modules that are registered\"},\"getModulesNumber()\":{\"notice\":\"Get the number of Modules managed by the contract\"},\"initialize()\":{\"notice\":\"Contract initialization\"},\"isContractAddress(address)\":{\"notice\":\"Check if address is smart contract and not EOA\"},\"isRegistered(address)\":{\"notice\":\"Checks that a module is registered in the module registry\"},\"register(string,string,address)\":{\"notice\":\"Registers a Module, with its metadata and run some checks: - mandatory name - mandatory module's deployed smart contract address - the module must be unique\"},\"runModules(address[],(bytes32,uint64,bytes,bytes),bytes[],uint256)\":{\"notice\":\"Executes the run method for all given Modules that are registered\"},\"runModulesV2(address[],(bytes32,uint64,bytes,bytes),bytes[],uint256,address,address,uint8)\":{\"notice\":\"Executes the V2 run method for all given Modules that are registered\"},\"updateRouter(address)\":{\"notice\":\"Changes the address for the Router\"}},\"notice\":\"This contract aims to manage the Modules used by the Portals, including their discoverability\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ModuleRegistry.sol\":\"ModuleRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol\":{\"keccak256\":\"0x94edef8687cf1335a114f7e7267fa92cb0d9e61afde8d62589aceede6c245caf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dbcc182503f671c6bb7e2c24fe5f13e4c7604389d6cfccd074bc1d9fa7b86df\",\"dweb:/ipfs/QmdioHDNmTsJx9xMcwBvA7QJhC4MzTmDmWHiWsZpbETLXx\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/AttestationRegistry.sol\":{\"keccak256\":\"0x29c8dfa90fddd7ea2786eaf9c81e4acac0523e893878eddb22fe431b20277f2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e850cc8be2dad4a112ac6173cb9fd8ce7d34cdb0c909e5ecb17231db3414286\",\"dweb:/ipfs/QmUkWqXmAkK8YwmV94UkgXFhZmuEuUyL9e3QZSy8sDpq4C\"]},\"src/Common.sol\":{\"keccak256\":\"0x07627815aee6d7b83ae82aef10f45b54ac0be15cbbbb249300cc097475475c24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72b82fc8baf2256b13b0b36f343328bfcd7d979304c47eca5731237d744fd094\",\"dweb:/ipfs/QmQW23C75qvgR5H2cUgCJ5zZDwHCDLBbESGExwVCmJjL4k\"]},\"src/DefaultPortal.sol\":{\"keccak256\":\"0x5166d5fa1b4531d9e06d115d27ffd500f799d58d10bcb7dc2abfb36cac01d0a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4c34da5197634be5efcb0de862ad3a325dfb98ea745a7522590805621e5a8bb\",\"dweb:/ipfs/QmPBrKfMdiGzpzSZJZ7yeBjFGAtWVfAA1k8inU3bQfE4Qx\"]},\"src/ModuleRegistry.sol\":{\"keccak256\":\"0x66ade337bd5b54b2d78bb76eea50b6af3ae1b62c5062180ae48675f5466b1d8e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba0c49bd51c0cfa09ffcf03cea45db1404b113144890ccb8acf4462f6f4e33a3\",\"dweb:/ipfs/QmVxgt3S2wY5GTs5ePU3RrDN1161FddiphCnpTPPKoVY43\"]},\"src/PortalRegistry.sol\":{\"keccak256\":\"0xd03698217ac9431f2931bee4be4bf750ee55dfd39652eff3f4cc31704bcf3d6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e794c59ad5cb7ac65a2bc19bcccc2f685b35bab98e32848d01bd481186e871d\",\"dweb:/ipfs/QmR2CzDJLyrYBK5JJou1pRqWcQTz6Z9R2gknwb5sptKT2y\"]},\"src/SchemaRegistry.sol\":{\"keccak256\":\"0xe1f0bc402fd10619a322066430212c4ff7313b9c1e2597c7157bd7dc7da5637f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6cba29501696ed6f2457a6d585c34adea9220a3a2a16b045d78e472ec32126d\",\"dweb:/ipfs/QmNrVdCaAqQQjdpH774MMngHCUMSNc2Q2EBmhrnivzB7Fz\"]},\"src/abstracts/AbstractModule.sol\":{\"keccak256\":\"0xf3c21499997ee0b59181eaeb137fc981c27af83fc39962ddf14c9f025b594723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e00e06a887d104e0a4f2e3557535700bea8492f571d3bd4cb2bcc90f8595dde\",\"dweb:/ipfs/QmUPNZbxRvd9MLT8zP1QbZ2iX8mA4TtFSJQm4pLqjdJJJ4\"]},\"src/abstracts/AbstractModuleV2.sol\":{\"keccak256\":\"0xa768de7c63227d268fb11c7d243d3080c4446df636a20894c3505b18a90dfa67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a045e40e333c81eff6de29c03e0467bef67851444bc5d5e4012c2540de119da\",\"dweb:/ipfs/QmZcYzdGNvpRpZ7XP3VLxheofCaAjus8CYP9nDKhBQGYPr\"]},\"src/abstracts/AbstractPortal.sol\":{\"keccak256\":\"0x3a3b137f6600836fbd79363288d774293760cb68467eda5161b75d7f804976fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa747cf4d97b6f3e99e1c44723c29758875d1229e180f95480180bab86d9f518\",\"dweb:/ipfs/QmbzVW382uh5WC2mQXm6ZBz2Rcths7cjhB9WmLnxqnAwet\"]},\"src/interfaces/IPortal.sol\":{\"keccak256\":\"0x15b44e7fb4159d2ad185c0e4744b2b554c23241cd17fcda99918ce938baa5d67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b9f5ac894f97d33af5e6aa58a6887a0647c85643ab6532f7f4206c85457a132\",\"dweb:/ipfs/QmVWSQMrnGCApuY5eAJwFwQMatt3MoX9iaG4jFaQM7MQiM\"]},\"src/interfaces/IRouter.sol\":{\"keccak256\":\"0x28599dbf7e8d3903c57c0df03a6f4ee26e731452c79755525c34a1b18ddd4d9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://122078d4c05dc8a8205d766017e3880665e44e726b82aa710347e95989d338a3\",\"dweb:/ipfs/QmSToNkFkzs8cJ2xQeQqsrUBC73tDXjGirGafK6ZkfXTm2\"]},\"src/types/Enums.sol\":{\"keccak256\":\"0x6c68eecf740a3f51211c954a99b43ebc2186e7b3e79b6c984937ad5c983e45a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c185006a0fde12fd59733b01578bbeefc2c0349c5f7899cc0652d3e3dd1a142\",\"dweb:/ipfs/QmUsw5sEwBDM4skEaHHdRovDXB12F47pQtUjE4Dq2SBu3t\"]},\"src/types/Structs.sol\":{\"keccak256\":\"0x8e3d41554d3c35181c36e019deddebfa6cb52a3f7b53c73c197fa2a87184ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc65fc7d7491ad0a26c8dd5ca1a1bb54d935ad6b59d99463c781446d57013f2a\",\"dweb:/ipfs/QmTgtxg6oNmf6QnbEcNdQosFutUYs7tkZSeN9KVpKGtWWK\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.21+commit.d9974bed" },
    "language": "Solidity",
    "output": {
      "abi": [
        { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
        { "inputs": [], "type": "error", "name": "AttestationPayloadMissing" },
        { "inputs": [], "type": "error", "name": "ModuleAddressInvalid" },
        { "inputs": [], "type": "error", "name": "ModuleAlreadyExists" },
        { "inputs": [], "type": "error", "name": "ModuleInvalid" },
        { "inputs": [], "type": "error", "name": "ModuleNameMissing" },
        { "inputs": [], "type": "error", "name": "ModuleNotRegistered" },
        { "inputs": [], "type": "error", "name": "ModuleValidationPayloadMismatch" },
        { "inputs": [], "type": "error", "name": "OnlyAllowlisted" },
        { "inputs": [], "type": "error", "name": "RouterInvalid" },
        {
          "inputs": [{ "internalType": "uint8", "name": "version", "type": "uint8", "indexed": false }],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "name", "type": "string", "indexed": false },
            { "internalType": "string", "name": "description", "type": "string", "indexed": false },
            { "internalType": "address", "name": "moduleAddress", "type": "address", "indexed": false }
          ],
          "type": "event",
          "name": "ModuleRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "previousOwner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "newOwner", "type": "address", "indexed": true }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "address", "name": "routerAddress", "type": "address", "indexed": false }],
          "type": "event",
          "name": "RouterUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address[]", "name": "modulesAddresses", "type": "address[]" },
            {
              "internalType": "struct AttestationPayload[]",
              "name": "attestationsPayloads",
              "type": "tuple[]",
              "components": [
                { "internalType": "bytes32", "name": "schemaId", "type": "bytes32" },
                { "internalType": "uint64", "name": "expirationDate", "type": "uint64" },
                { "internalType": "bytes", "name": "subject", "type": "bytes" },
                { "internalType": "bytes", "name": "attestationData", "type": "bytes" }
              ]
            },
            { "internalType": "bytes[][]", "name": "validationPayloads", "type": "bytes[][]" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bulkRunModules"
        },
        {
          "inputs": [
            { "internalType": "address[]", "name": "modulesAddresses", "type": "address[]" },
            {
              "internalType": "struct AttestationPayload[]",
              "name": "attestationPayloads",
              "type": "tuple[]",
              "components": [
                { "internalType": "bytes32", "name": "schemaId", "type": "bytes32" },
                { "internalType": "uint64", "name": "expirationDate", "type": "uint64" },
                { "internalType": "bytes", "name": "subject", "type": "bytes" },
                { "internalType": "bytes", "name": "attestationData", "type": "bytes" }
              ]
            },
            { "internalType": "bytes[][]", "name": "validationPayloads", "type": "bytes[][]" },
            { "internalType": "address", "name": "initialCaller", "type": "address" },
            { "internalType": "address", "name": "attester", "type": "address" },
            { "internalType": "enum OperationType", "name": "operationType", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bulkRunModulesV2"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getModulesNumber",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "initialize" },
        {
          "inputs": [{ "internalType": "address", "name": "contractAddress", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isContractAddress",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "moduleAddress", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isRegistered",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "moduleAddresses",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "id", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "modules",
          "outputs": [
            { "internalType": "address", "name": "moduleAddress", "type": "address" },
            { "internalType": "string", "name": "name", "type": "string" },
            { "internalType": "string", "name": "description", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [
            { "internalType": "string", "name": "name", "type": "string" },
            { "internalType": "string", "name": "description", "type": "string" },
            { "internalType": "address", "name": "moduleAddress", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "register"
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "renounceOwnership" },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "router",
          "outputs": [{ "internalType": "contract IRouter", "name": "", "type": "address" }]
        },
        {
          "inputs": [
            { "internalType": "address[]", "name": "modulesAddresses", "type": "address[]" },
            {
              "internalType": "struct AttestationPayload",
              "name": "attestationPayload",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "schemaId", "type": "bytes32" },
                { "internalType": "uint64", "name": "expirationDate", "type": "uint64" },
                { "internalType": "bytes", "name": "subject", "type": "bytes" },
                { "internalType": "bytes", "name": "attestationData", "type": "bytes" }
              ]
            },
            { "internalType": "bytes[]", "name": "validationPayloads", "type": "bytes[]" },
            { "internalType": "uint256", "name": "value", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "runModules"
        },
        {
          "inputs": [
            { "internalType": "address[]", "name": "modulesAddresses", "type": "address[]" },
            {
              "internalType": "struct AttestationPayload",
              "name": "attestationPayload",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "schemaId", "type": "bytes32" },
                { "internalType": "uint64", "name": "expirationDate", "type": "uint64" },
                { "internalType": "bytes", "name": "subject", "type": "bytes" },
                { "internalType": "bytes", "name": "attestationData", "type": "bytes" }
              ]
            },
            { "internalType": "bytes[]", "name": "validationPayloads", "type": "bytes[]" },
            { "internalType": "uint256", "name": "value", "type": "uint256" },
            { "internalType": "address", "name": "initialCaller", "type": "address" },
            { "internalType": "address", "name": "attester", "type": "address" },
            { "internalType": "enum OperationType", "name": "operationType", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "runModulesV2"
        },
        {
          "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [{ "internalType": "address", "name": "_router", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateRouter"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "bulkRunModules(address[],(bytes32,uint64,bytes,bytes)[],bytes[][])": {
            "details": "NOTE: Currently the bulk run modules does not handle payable modules            a default value of 0 is used.DISCLAIMER: This method may have unexpected behavior if one of the checks is done on the attestation ID                  as this ID won't be incremented before the end of the transaction.                  If you need to check the attestation ID, please use the `attest` method.",
            "params": {
              "attestationsPayloads": "the payloads to attest",
              "modulesAddresses": "the addresses of the registered modules",
              "validationPayloads": "the payloads to check for each module"
            }
          },
          "bulkRunModulesV2(address[],(bytes32,uint64,bytes,bytes)[],bytes[][],address,address,uint8)": {
            "details": "NOTE: Currently the bulk run modules does not handle payable modules            a default value of 0 is used.DISCLAIMER: This method may have unexpected behavior if one of the checks is done on the attestation ID                  as this ID won't be incremented before the end of the transaction.                  If you need to check the attestation ID, please use the `attestV2` method.",
            "params": {
              "attestationPayloads": "the payloads to attest",
              "modulesAddresses": "the addresses of the registered modules",
              "validationPayloads": "the payloads to check for each module"
            }
          },
          "constructor": { "custom:oz-upgrades-unsafe-allow": "constructor" },
          "getModulesNumber()": {
            "details": "Returns the length of the `moduleAddresses` array",
            "returns": { "_0": "The number of Modules already registered" }
          },
          "isContractAddress(address)": {
            "params": { "contractAddress": "address to be verified" },
            "returns": { "_0": "the result as true if it is a smart contract else false" }
          },
          "isRegistered(address)": {
            "params": { "moduleAddress": "The address of the Module to check" },
            "returns": { "_0": "True if the Module is registered, False otherwise" }
          },
          "owner()": { "details": "Returns the address of the current owner." },
          "register(string,string,address)": {
            "details": "the module is stored in a mapping, the number of modules is incremented and an event is emitted",
            "params": {
              "description": "the module description",
              "moduleAddress": "the address of the deployed smart contract",
              "name": "the module name"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "runModules(address[],(bytes32,uint64,bytes,bytes),bytes[],uint256)": {
            "details": "check if modules are registered and execute run method for each module",
            "params": {
              "attestationPayload": "the payload to attest",
              "modulesAddresses": "the addresses of the registered modules",
              "validationPayloads": "the payloads to check for each module (one payload per module)"
            }
          },
          "runModulesV2(address[],(bytes32,uint64,bytes,bytes),bytes[],uint256,address,address,uint8)": {
            "details": "check if modules are registered and execute the V2 run method for each module",
            "params": {
              "attestationPayload": "the payload to attest",
              "attester": "the address defined by the Portal as the attester for this payload",
              "initialCaller": "the address of the initial caller (transaction sender)",
              "modulesAddresses": "the addresses of the registered modules",
              "validationPayloads": "the payloads to check for each module (one payload per module)",
              "value": "the value (ETH) optionally passed in the attesting transaction"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateRouter(address)": { "details": "Only the registry owner can call this method" }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "bulkRunModules(address[],(bytes32,uint64,bytes,bytes)[],bytes[][])": {
            "notice": "Executes the modules validation for all attestations payloads for all given Modules that are registered"
          },
          "bulkRunModulesV2(address[],(bytes32,uint64,bytes,bytes)[],bytes[][],address,address,uint8)": {
            "notice": "Executes the V2 modules validation for all attestations payloads for all given V2 Modules that are registered"
          },
          "getModulesNumber()": { "notice": "Get the number of Modules managed by the contract" },
          "initialize()": { "notice": "Contract initialization" },
          "isContractAddress(address)": { "notice": "Check if address is smart contract and not EOA" },
          "isRegistered(address)": { "notice": "Checks that a module is registered in the module registry" },
          "register(string,string,address)": {
            "notice": "Registers a Module, with its metadata and run some checks: - mandatory name - mandatory module's deployed smart contract address - the module must be unique"
          },
          "runModules(address[],(bytes32,uint64,bytes,bytes),bytes[],uint256)": {
            "notice": "Executes the run method for all given Modules that are registered"
          },
          "runModulesV2(address[],(bytes32,uint64,bytes,bytes),bytes[],uint256,address,address,uint8)": {
            "notice": "Executes the V2 run method for all given Modules that are registered"
          },
          "updateRouter(address)": { "notice": "Changes the address for the Router" }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/ModuleRegistry.sol": "ModuleRegistry" },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e",
        "urls": [
          "bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c",
          "dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef",
        "urls": [
          "bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95",
          "dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165CheckerUpgradeable.sol": {
        "keccak256": "0x94edef8687cf1335a114f7e7267fa92cb0d9e61afde8d62589aceede6c245caf",
        "urls": [
          "bzz-raw://9dbcc182503f671c6bb7e2c24fe5f13e4c7604389d6cfccd074bc1d9fa7b86df",
          "dweb:/ipfs/QmdioHDNmTsJx9xMcwBvA7QJhC4MzTmDmWHiWsZpbETLXx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/AttestationRegistry.sol": {
        "keccak256": "0x29c8dfa90fddd7ea2786eaf9c81e4acac0523e893878eddb22fe431b20277f2d",
        "urls": [
          "bzz-raw://9e850cc8be2dad4a112ac6173cb9fd8ce7d34cdb0c909e5ecb17231db3414286",
          "dweb:/ipfs/QmUkWqXmAkK8YwmV94UkgXFhZmuEuUyL9e3QZSy8sDpq4C"
        ],
        "license": "MIT"
      },
      "src/Common.sol": {
        "keccak256": "0x07627815aee6d7b83ae82aef10f45b54ac0be15cbbbb249300cc097475475c24",
        "urls": [
          "bzz-raw://72b82fc8baf2256b13b0b36f343328bfcd7d979304c47eca5731237d744fd094",
          "dweb:/ipfs/QmQW23C75qvgR5H2cUgCJ5zZDwHCDLBbESGExwVCmJjL4k"
        ],
        "license": "MIT"
      },
      "src/DefaultPortal.sol": {
        "keccak256": "0x5166d5fa1b4531d9e06d115d27ffd500f799d58d10bcb7dc2abfb36cac01d0a7",
        "urls": [
          "bzz-raw://a4c34da5197634be5efcb0de862ad3a325dfb98ea745a7522590805621e5a8bb",
          "dweb:/ipfs/QmPBrKfMdiGzpzSZJZ7yeBjFGAtWVfAA1k8inU3bQfE4Qx"
        ],
        "license": "MIT"
      },
      "src/ModuleRegistry.sol": {
        "keccak256": "0x66ade337bd5b54b2d78bb76eea50b6af3ae1b62c5062180ae48675f5466b1d8e",
        "urls": [
          "bzz-raw://ba0c49bd51c0cfa09ffcf03cea45db1404b113144890ccb8acf4462f6f4e33a3",
          "dweb:/ipfs/QmVxgt3S2wY5GTs5ePU3RrDN1161FddiphCnpTPPKoVY43"
        ],
        "license": "MIT"
      },
      "src/PortalRegistry.sol": {
        "keccak256": "0xd03698217ac9431f2931bee4be4bf750ee55dfd39652eff3f4cc31704bcf3d6a",
        "urls": [
          "bzz-raw://1e794c59ad5cb7ac65a2bc19bcccc2f685b35bab98e32848d01bd481186e871d",
          "dweb:/ipfs/QmR2CzDJLyrYBK5JJou1pRqWcQTz6Z9R2gknwb5sptKT2y"
        ],
        "license": "MIT"
      },
      "src/SchemaRegistry.sol": {
        "keccak256": "0xe1f0bc402fd10619a322066430212c4ff7313b9c1e2597c7157bd7dc7da5637f",
        "urls": [
          "bzz-raw://a6cba29501696ed6f2457a6d585c34adea9220a3a2a16b045d78e472ec32126d",
          "dweb:/ipfs/QmNrVdCaAqQQjdpH774MMngHCUMSNc2Q2EBmhrnivzB7Fz"
        ],
        "license": "MIT"
      },
      "src/abstracts/AbstractModule.sol": {
        "keccak256": "0xf3c21499997ee0b59181eaeb137fc981c27af83fc39962ddf14c9f025b594723",
        "urls": [
          "bzz-raw://7e00e06a887d104e0a4f2e3557535700bea8492f571d3bd4cb2bcc90f8595dde",
          "dweb:/ipfs/QmUPNZbxRvd9MLT8zP1QbZ2iX8mA4TtFSJQm4pLqjdJJJ4"
        ],
        "license": "MIT"
      },
      "src/abstracts/AbstractModuleV2.sol": {
        "keccak256": "0xa768de7c63227d268fb11c7d243d3080c4446df636a20894c3505b18a90dfa67",
        "urls": [
          "bzz-raw://3a045e40e333c81eff6de29c03e0467bef67851444bc5d5e4012c2540de119da",
          "dweb:/ipfs/QmZcYzdGNvpRpZ7XP3VLxheofCaAjus8CYP9nDKhBQGYPr"
        ],
        "license": "MIT"
      },
      "src/abstracts/AbstractPortal.sol": {
        "keccak256": "0x3a3b137f6600836fbd79363288d774293760cb68467eda5161b75d7f804976fc",
        "urls": [
          "bzz-raw://aa747cf4d97b6f3e99e1c44723c29758875d1229e180f95480180bab86d9f518",
          "dweb:/ipfs/QmbzVW382uh5WC2mQXm6ZBz2Rcths7cjhB9WmLnxqnAwet"
        ],
        "license": "MIT"
      },
      "src/interfaces/IPortal.sol": {
        "keccak256": "0x15b44e7fb4159d2ad185c0e4744b2b554c23241cd17fcda99918ce938baa5d67",
        "urls": [
          "bzz-raw://8b9f5ac894f97d33af5e6aa58a6887a0647c85643ab6532f7f4206c85457a132",
          "dweb:/ipfs/QmVWSQMrnGCApuY5eAJwFwQMatt3MoX9iaG4jFaQM7MQiM"
        ],
        "license": "MIT"
      },
      "src/interfaces/IRouter.sol": {
        "keccak256": "0x28599dbf7e8d3903c57c0df03a6f4ee26e731452c79755525c34a1b18ddd4d9c",
        "urls": [
          "bzz-raw://122078d4c05dc8a8205d766017e3880665e44e726b82aa710347e95989d338a3",
          "dweb:/ipfs/QmSToNkFkzs8cJ2xQeQqsrUBC73tDXjGirGafK6ZkfXTm2"
        ],
        "license": "MIT"
      },
      "src/types/Enums.sol": {
        "keccak256": "0x6c68eecf740a3f51211c954a99b43ebc2186e7b3e79b6c984937ad5c983e45a2",
        "urls": [
          "bzz-raw://6c185006a0fde12fd59733b01578bbeefc2c0349c5f7899cc0652d3e3dd1a142",
          "dweb:/ipfs/QmUsw5sEwBDM4skEaHHdRovDXB12F47pQtUjE4Dq2SBu3t"
        ],
        "license": "MIT"
      },
      "src/types/Structs.sol": {
        "keccak256": "0x8e3d41554d3c35181c36e019deddebfa6cb52a3f7b53c73c197fa2a87184ed2a",
        "urls": [
          "bzz-raw://bc65fc7d7491ad0a26c8dd5ca1a1bb54d935ad6b59d99463c781446d57013f2a",
          "dweb:/ipfs/QmTgtxg6oNmf6QnbEcNdQosFutUYs7tkZSeN9KVpKGtWWK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 49
}
